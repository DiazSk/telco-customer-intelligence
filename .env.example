# Environment Configuration Template
# Copy this file to .env and update with your values

# Database Configuration
DB_USER=telco_user
DB_PASSWORD=your_secure_password_here
DB_NAME=telco_db
DATABASE_URL=postgresql://user:password@localhost:5432/telco_db
MLFLOW_TRACKING_URI=file:./mlruns
SECRET_KEY=your-secret-key-here
API_KEY=your-api-key-here
USE_DATABASE=false

# For development, you can use SQLite:
# DATABASE_URL=sqlite:///telco.db

# Redis Configuration (for caching)
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=

# API Configuration
API_HOST=0.0.0.0
API_PORT=8000
API_WORKERS=4
API_RELOAD=true

# MLflow Configuration
MLFLOW_TRACKING_URI=file:./mlruns
MLFLOW_EXPERIMENT_NAME=telco_churn
MLFLOW_BACKEND_STORE_URI=postgresql://telco_user:your_password_here@localhost:5432/mlflow_db

# Model Configuration
MODEL_PATH=models/
MODEL_VERSION=latest
MODEL_CACHE_TTL=3600

# Logging
LOG_LEVEL=INFO
LOG_FILE=logs/app.log

# Security (generate your own secrets!)
SECRET_KEY=your-secret-key-here
JWT_SECRET_KEY=your-jwt-secret-here
JWT_ALGORITHM=HS256
JWT_EXPIRATION_HOURS=24

# Feature Store
FEATURE_STORE_PATH=data/features/
FEATURE_STORE_TYPE=parquet  # Options: parquet, postgres, redis

# Monitoring
ENABLE_MONITORING=true
PROMETHEUS_PORT=9090
GRAFANA_PORT=3000

# Cloud Storage (optional)
# AWS_ACCESS_KEY_ID=
# AWS_SECRET_ACCESS_KEY=
# AWS_REGION=us-east-1
# S3_BUCKET_NAME=telco-ml-artifacts

# Azure (optional)
# AZURE_STORAGE_CONNECTION_STRING=
# AZURE_CONTAINER_NAME=

# GCP (optional)
# GOOGLE_APPLICATION_CREDENTIALS=path/to/credentials.json
# GCS_BUCKET_NAME=

# Airflow (if using)
AIRFLOW_HOME=/opt/airflow
AIRFLOW_DAGS_FOLDER=dags/
AIRFLOW_EXECUTOR=LocalExecutor

# Dashboard Configuration
STREAMLIT_SERVER_PORT=8501
STREAMLIT_SERVER_ADDRESS=0.0.0.0
STREAMLIT_THEME=light

# Data Pipeline
PIPELINE_SCHEDULE=0 2 * * *  # Daily at 2 AM
PIPELINE_RETRIES=3
PIPELINE_RETRY_DELAY=300

# Notifications (optional)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=
# SMTP_PASSWORD=
# NOTIFICATION_EMAIL=

# Slack Integration (optional)
# SLACK_WEBHOOK_URL=
# SLACK_CHANNEL=#ml-alerts

# Development Settings
DEBUG=false
TESTING=false
ENV=development  # Options: development, staging, production