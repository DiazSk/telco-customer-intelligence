# Docker Compose configuration for Telco Customer Intelligence Platform

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: ${DB_USER:-telco_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-telco_pass}
      POSTGRES_DB: ${DB_NAME:-telco_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-telco_user}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Data Pipeline
  pipeline:
    build: .
    command: python src/data_pipeline/pipeline.py
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./configs:/app/configs
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - postgres
      - redis

  # FastAPI Application
  api:
    build: .
    command: uvicorn src.api.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
      - ./data:/app/data
      - ./models:/app/models
      - ./logs:/app/logs
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-telco_user}:${DB_PASSWORD:-telco_pass}@postgres:5432/${DB_NAME:-telco_db}
      - REDIS_URL=redis://redis:6379
      - PYTHONUNBUFFERED=1
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key}
      - ENVIRONMENT=${ENVIRONMENT:-development}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Streamlit Dashboard
  dashboard:
    build:
      context: .
      dockerfile: Dockerfile.dashboard
    ports:
      - "8501:8501"
    volumes:
      - ./src/dashboard:/app/src/dashboard
      - ./data:/app/data
      - ./.streamlit:/app/.streamlit
    environment:
      - API_URL=http://api:8000
      - PYTHONUNBUFFERED=1
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # MLflow Tracking Server
  mlflow:
    build: .
    command: mlflow server --backend-store-uri postgresql://${DB_USER:-telco_user}:${DB_PASSWORD:-telco_pass}@postgres:5432/${DB_NAME:-telco_db} --default-artifact-root /app/mlruns --host 0.0.0.0 --port 5000
    ports:
      - "5000:5000"
    volumes:
      - ./mlruns:/app/mlruns
    environment:
      - BACKEND_STORE_URI=postgresql://${DB_USER:-telco_user}:${DB_PASSWORD:-telco_pass}@postgres:5432/${DB_NAME:-telco_db}
    depends_on:
      postgres:
        condition: service_healthy

  # Jupyter Notebook (for development)
  notebook:
    build: .
    command: jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token=''
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/app/notebooks
      - ./data:/app/data
      - ./src:/app/src
    environment:
      - PYTHONUNBUFFERED=1

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: telco-network
